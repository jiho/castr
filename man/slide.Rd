% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rollapply.R
\name{slide}
\alias{slide}
\title{Apply a function in a sliding widow along a vector}
\usage{
slide(x, k, fun, n = 1, ...)
}
\arguments{
\item{x}{input numeric vector.}

\item{k}{order of the moving window; the window size is 2k+1.}

\item{fun}{function to apply in the moving window.}

\item{n}{number of times to pass the function over the data.}

\item{...}{arguments passed to \code{fun}. A usual one is \code{na.rm=TRUE} to avoid getting \code{NA}s at the extremities of \code{x}.}
}
\value{
The data passed through \code{fun}, \code{n} times.
}
\description{
Allows to compute a moving average, moving median, or even moving standard deviation, etc. in a generic way.
}
\details{
A window of size \code{2k+1} is centred on element \code{i} of \code{x}. All elements from index \code{i-k} to index \code{i+k} are sent to function \code{fun}. The returned value is associated with index \code{i} in the result. The window is moved to element \code{i+1} and so on.

For such sliding window computation to make sense, the data must be recorded on a regular coordinate (i.e. at regular intervals). Otherwise, data points that are far from each other may end up in the same window.

The extremeties of the input vector are padded with \code{NA} to be able to center the sliding window from the first to the last elements. This means that, to avoid getting \code{k} missing values at the beginning and at the end of the result, \code{na.rm=TRUE} should be passed to \code{fun}.
}
\examples{
# create some data and add random noise
xs <- sin(seq(0, 4*pi, length=100))
x <- xs + rnorm(length(xs), sd=0.25)
plot(x)
lines(xs)
# filter the data in various ways
# moving average
mav   <- slide(x, 3, mean, na.rm=TRUE)
# running moving average
rmav  <- slide(x, 3, mean, na.rm=TRUE, n=4)
# weighted moving average
wmav  <- slide(x, 3, weighted.mean, na.rm=TRUE, w=c(1,2,3,4,3,2,1)/16)
# weighted running moving average
wrmav <- slide(x, 3, weighted.mean, na.rm=TRUE, w=c(1,2,3,4,3,2,1)/16, n=4)
# moving median
mmed  <- slide(x, 3, median, na.rm=TRUE)
lines(mav, col="red")
lines(rmav, col="red", lty="dashed")
lines(wmav, col="orange")
lines(wrmav, col="orange", lty="dashed")
lines(mmed, col="blue")
# inspect variability around filtered data
plot(slide(x-rmav, 7, sd))
plot(slide(x-mmed, 7, mad))
}
